# 랜덤 사진 공유 앱 개발 계획서

## 📱 앱 개요
**앱명**: PhotoRoulette (임시)  
**플랫폼**: iOS & Android (React Native)  
**타입**: 소셜 오락 앱  
**핵심**: 랜덤으로 선택된 사진을 3초 카운트다운 후 자동 공유하는 스릴 있는 게임

---

## 🎯 MVP (최소 기능 제품) 목표

### 핵심 기능
1. **방 시스템**: 코드 기반 2인 매칭
2. **랜덤 사진 선택**: 갤러리에서 무작위 이미지 픽업
3. **자동 공유**: 3초 카운트다운 후 강제 전송
4. **턴제 게임**: 방장부터 번갈아가며 진행

---

## 🏗️ 기술 스택

### 프론트엔드
- **React Native** (크로스플랫폼)
- **TypeScript** (타입 안정성)
- **React Navigation** (화면 전환)
- **react-native-image-picker** (갤러리 접근)

### 백엔드 & 실시간 통신
- **Firebase Realtime Database** (실시간 방 상태)
- **Firebase Storage** (이미지 임시 저장)
- **Firebase Auth** (익명 인증)

### 권한
- **Camera Roll/Gallery** (사진 접근)
- **Internet** (이미지 업로드/다운로드)

---

## 📋 화면 구성

### 1. 홈 화면
```
┌─────────────────────────┐
│     PhotoRoulette       │
│                         │
│  [방 코드 입력]          │
│  ┌─────────────────┐     │
│  │     ABCD1234    │     │
│  └─────────────────┘     │
│       [참가하기]         │
│                         │
│       [방 만들기]        │
│                         │
└─────────────────────────┘
```

### 2. 대기실 화면
```
┌─────────────────────────┐
│    방 코드: ABCD1234     │
│                         │
│  👤 방장: 당신           │
│  ⏳ 상대방 대기 중...     │
│                         │
│     [방 나가기]          │
│                         │
└─────────────────────────┘
```

### 3. 게임 화면
```
┌─────────────────────────┐
│      당신의 차례!        │
│                         │
│    [이미지 미리보기]     │
│                         │
│         ⏰ 3            │
│      자동 공유됩니다      │
│                         │
│     [방 나가기]          │
└─────────────────────────┘
```

---

## 🔄 사용자 플로우

### 방 만들기 플로우
1. 홈 화면 → "방 만들기" 버튼
2. 4자리 랜덤 코드 생성 (예: ABCD)
3. Firebase에 방 생성 (방장으로 등록)
4. 대기실 화면으로 이동
5. 상대방 참가 대기

### 방 참가 플로우
1. 홈 화면 → 방 코드 입력
2. Firebase에서 방 존재 여부 확인
3. 방이 존재하고 빈 자리가 있으면 참가
4. 게임 화면으로 양쪽 모두 이동

### 게임 플로우
1. **방장 턴**
   - "사진 뽑기" 버튼 활성화
   - 버튼 클릭 → 갤러리에서 랜덤 사진 선택
   - 3초 카운트다운 표시
   - 자동으로 상대방에게 전송
   
2. **참가자 턴**
   - 받은 사진 확인
   - "사진 뽑기" 버튼 활성화
   - 동일한 과정 반복

3. **계속/종료**
   - 각 턴 후 "한 번 더" 또는 "나가기" 선택
   - 언제든 방 나가기 가능

---

## 🗃️ 데이터베이스 구조

### Firebase Realtime Database
```json
{
  "rooms": {
    "ABCD": {
      "host": "user1_id",
      "guest": "user2_id", 
      "current_turn": "user1_id",
      "status": "playing", // waiting, playing, finished
      "last_image": {
        "sender": "user1_id",
        "url": "firebase_storage_url",
        "timestamp": 1234567890
      }
    }
  },
  "users": {
    "user1_id": {
      "current_room": "ABCD",
      "status": "online"
    }
  }
}
```

---

## 🛠️ 개발 단계별 계획

### Phase 1: 프로젝트 설정 (1주)
- [ ] React Native 프로젝트 초기 설정
- [ ] Firebase 프로젝트 생성 및 연동
- [ ] 필요한 패키지 설치
- [ ] 기본 네비게이션 구조 설정

### Phase 2: UI 구현 (1-2주)
- [ ] 홈 화면 UI
- [ ] 대기실 화면 UI  
- [ ] 게임 화면 UI
- [ ] 기본 스타일링

### Phase 3: 핵심 기능 구현 (2-3주)
- [ ] 방 생성/참가 로직
- [ ] 갤러리 접근 권한 요청
- [ ] 랜덤 이미지 선택 기능
- [ ] 3초 카운트다운 구현
- [ ] 이미지 업로드/다운로드

### Phase 4: 실시간 통신 (1-2주)
- [ ] Firebase 실시간 리스너 구현
- [ ] 턴제 시스템 로직
- [ ] 방 상태 동기화
- [ ] 연결 끊김 처리

### Phase 5: 테스트 & 최적화 (1주)
- [ ] 다양한 시나리오 테스트
- [ ] 성능 최적화
- [ ] 버그 수정
- [ ] iOS/Android 빌드 테스트

---

## 📱 권한 및 설정

### iOS (Info.plist)
```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>게임을 위해 사진에 접근합니다</string>
```

### Android (android/app/src/main/AndroidManifest.xml)
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.INTERNET" />
```

---

## 🚨 주요 고려사항

### 보안 & 프라이버시
- 이미지는 임시 저장 후 자동 삭제 (24시간)
- 사용자 식별은 익명 UUID 사용
- 민감한 사진 필터링 옵션 (향후)

### 성능
- 이미지 압축 후 업로드
- 로딩 상태 표시
- 네트워크 오류 처리

### 사용성
- 직관적인 UI/UX
- 명확한 안내 메시지
- 게임 중 나가기 안전장치

---

## 🎯 예상 개발 기간
**총 6-8주** (주 20-30시간 투자 기준)

### 마일스톤
- **2주차**: 기본 UI 완성
- **4주차**: 핵심 기능 구현 완료  
- **6주차**: 실시간 통신 완성
- **8주차**: 테스트 완료 및 배포 준비

---

## 🚀 향후 확장 가능성
- 그룹 게임 (3-4명)
- 사진 필터/효과
- 게임 통계 및 히스토리
- 친구 시스템
- 다양한 게임 모드